# Advanced Snowflake Deployment Configuration
# This file defines domains, deployment order, dependencies, and execution patterns

# Environment-specific Jinja template variables
environments:
  DEV:
    variables:
      environment: "dev"
      account: "OILZKIQ-ID94597"
      user: "SAURABHMAC"
      database: "analytics_platform_dev"
      warehouse: "analytics_wh_dev"
      warehouse_size: "SMALL"
      retention_days: 1
      auto_suspend_minutes: 1
      task_schedule: "500 minute"  # Less frequent in dev
  STAGING:
    variables:
      environment: "staging"
      account: "OILZKIQ-ID94597"
      user: "SAURABHMAC"
      database: "analytics_platform_staging"
      warehouse: "analytics_wh_staging"
      warehouse_size: "MEDIUM"
      retention_days: 1
      auto_suspend_minutes: 1
      task_schedule: "200 minute"  # Regular frequency in staging
  PROD:
    variables:
      environment: "prod"
      account: "OILZKIQ-ID94597"
      user: "SAURABHMAC"
      database: "analytics_platform"
      warehouse: "analytics_wh"
      warehouse_size: "LARGE"
      retention_days: 1
      auto_suspend_minutes: 1
      task_schedule: "100 minute"  # Most frequent in production

# Domain definitions with paths and dependencies
domains:
  - name: "shared"
    description: "Shared foundation and utilities"
    path: "shared/snowflake"
    required_for: ["account", "asset", "customer"]
    deploy_first: true
    schemas:
      - name: "foundation"
        path: "foundation"
        description: "Core database and warehouse setup"
      - name: "reporting" 
        path: "reporting"
        description: "Shared reporting views and functions"
      - name: "schemas"
        path: "schemas"
        description: "Shared schema definitions"
        
  - name: "account"
    description: "Account-level data and processing"
    path: "Account/snowflake"
    depends_on: ["shared"]
    schemas:
      - name: "raw_data"
        path: "raw_data"
        description: "Raw data ingestion layer"
      - name: "processed_data"
        path: "processed_data"
        description: "Transformed analytics tables"
        
  - name: "asset"
    description: "Asset management and tracking"
    path: "Asset/snowflake"
    depends_on: ["shared"]
    schemas:
      - name: "asset_raw"
        path: "raw_data"
        description: "Raw asset data"
      - name: "asset_processed"
        path: "processed_data"
        description: "Processed asset analytics"
        
  - name: "customer"
    description: "Customer-specific objects and monitoring"
    path: "Customer/snowflake"
    depends_on: ["shared"]
    schemas:
      - name: "monitoring"
        path: "monitoring"
        description: "System monitoring and health checks"
      - name: "customer_analytics"
        path: "analytics"
        description: "Customer-specific analytics"

# Component deployment order within each schema
# Components are created in this sequence to respect dependencies
component_order:
  - name: "file_formats"
    directory: "file_format"
    pattern: "*.sql"
    description: "File format definitions for data loading"
    priority: 1
    
  - name: "ext_stage"
    directory: "ext_stage" 
    pattern: "*.sql"
    description: "External and internal stages"
    priority: 2
    
  - name: "table"
    directory: "table"
    pattern: "*.sql"
    description: "Base tables and data structures"
    priority: 3
    
  - name: "stream"
    directory: "stream"
    pattern: "*.sql"
    description: "Change data capture streams"
    priority: 4
    
  - name: "pipe"
    directory: "pipe"
    pattern: "*.sql"
    description: "Snowpipes for continuous data loading"
    priority: 5
    
  - name: "view"
    directory: "view"
    pattern: "*.sql"
    description: "Views and virtual tables"
    priority: 6
    
  - name: "task"
    directory: "task"
    pattern: "*.sql"
    description: "Scheduled tasks and automation"
    priority: 7
    
  - name: "function"
    directory: "function"
    pattern: "*.sql"
    description: "User-defined functions"
    priority: 8
    
  - name: "procedure"
    directory: "procedure"
    pattern: "*.sql"
    description: "Stored procedures and business logic"
    priority: 9
    
  - name: "dml"
    directory: "dml"
    pattern: "*.sql"
    description: "Data manipulation operations"
    priority: 10

# Component directories mapping
component_directories:
  file_formats: "file_format"
  ext_stage: "ext_stage"
  table: "table"
  stream: "stream"
  pipe: "pipe"
  view: "view"
  task: "task"
  function: "function"
  procedure: "procedure"
  dml: "dml"

# Deployment modes
deployment_modes:
  single_domain:
    description: "Deploy only a specific domain"
    requires_domain_selection: true
    
  full_deployment:
    description: "Deploy all domains in dependency order"
    deploy_all_domains: true
    respect_dependencies: true
    
  changed_only:
    description: "Deploy only changed components since last deployment"
    use_git_diff: true
    detect_changes: true
    respect_dependencies: true

# File patterns
file_patterns:
  sql: "*.sql"
  exclude_patterns:
    - "**/.*"
    - "**/*.bak"
    - "**/*.tmp"
    - "**/*_backup.sql"
    - "**/*_temp.sql"

# Special deployment files
special_files:
  foundation:
    file: "shared/snowflake/foundation/00_database_and_warehouse.sql"
    deploy_first: true
    description: "Core database and warehouse setup"
    
  permissions:
    file: "shared/snowflake/schemas/permissions.sql"
    deploy_last: true
    description: "Security and access control"
    
  sample_data:
    file: "shared/snowflake/02_sample_data.sql"
    description: "Sample data loading"
    condition: "load_sample_data"

# Monitoring configuration
monitoring:
  deployment_table: "monitoring.github_deployments"
  track_execution_time: true
  log_component_status: true

# Validation rules
validation:
  check_jinja_syntax: true
  validate_sql_syntax: false  # Requires Snowflake connection
  check_dependencies: true

# SchemaChange specific configuration
schemachange:
  version_table: "SCHEMACHANGE_HISTORY"
  create_version_table: true
  version_prefix: "V"
  version_separator: "__"
  file_naming:
    pattern: "V{version}__{domain}_{path}_{filename}.sql"
    description: "SchemaChange compatible file naming"
  
  # Version increment rules
  version_rules:
    feature_branch: "patch"      # feature/* branches increment patch version
    main_branch: "minor"         # main branch increments minor version
    manual_major: "major"        # manual deployments can increment major version
    
  # CREATE OR REPLACE conversion settings
  conversion:
    enabled: true
    objects:
      - "TABLE"
      - "VIEW" 
      - "FUNCTION"
      - "PROCEDURE"
      - "STREAM"
      - "TASK"
      - "PIPE"
      - "STAGE"
      - "FILE FORMAT"
      - "DATABASE"
      - "SCHEMA"
      - "WAREHOUSE"
    
  # Deployment settings
  deployment:
    role: "SYSADMIN"
    create_change_history_table: true
    verbose: true
    dry_run_preview: true