# =============================================================================
# SECURITY - CRITICAL: NEVER INCLUDE THESE IN DOCKER IMAGES
# =============================================================================

# Environment files with secrets
.env*
*.env*
env.txt
environment.txt
.env.local
.env.development
.env.staging
.env.production
.env.test

# Credential and secret files
*credential*
credentials*
secrets*
config*.json
*.pem
*.key
*.crt
*.cer
*.p12
*.pfx
*.jks
*.keystore
*.pkcs12

# SSH and authentication keys
id_rsa*
id_ed25519*
*.ppk
authorized_keys
known_hosts
.ssh/

# AWS credentials
.aws/
aws-credentials*
**/credentials

# Snowflake connection files
.snowsql/
snowsql_rt.log*
connections.toml
snowflake-config*

# Database connection strings
database.yml
db-config*
connection-strings*

# API keys and tokens
*api-key*
*api_key*
*token*
*jwt*
*bearer*
*oauth*

# Password files
*password*
*passwd*
*.pwd

# Jenkins secrets
jenkins/.env
jenkins/secrets/
jenkins/credentials.xml

# Kubernetes secrets
*secret*.yaml
*secret*.yml

# Terraform state and vars
terraform.tfstate*
terraform.tfvars*
*.tfvars
.terraform/

# =============================================================================
# BUILD ARTIFACTS & CACHES
# =============================================================================

# Git
.git/
.gitignore
.gitattributes
.github/

# Python
__pycache__/
*.pyc
*.pyo
*.pyd
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST
.pytest_cache/
.coverage
htmlcov/
.tox/
.venv/
venv/
env/
ENV/

# Node.js
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
.npm/
.yarn/
.pnpm-store/

# Java
target/
*.class
*.jar
*.war
*.ear

# IDE and editors
.vscode/
.idea/
*.swp
*.swo
*~
.DS_Store
Thumbs.db

# Logs
*.log
logs/
*.log.*

# Temporary files
tmp/
temp/
.tmp/
*.tmp
*.temp

# Test files
test/
tests/
*test*
*spec*
coverage/
.nyc_output/

# Documentation that's not needed in runtime
README*
CHANGELOG*
CONTRIBUTING*
LICENSE*
*.md
docs/
documentation/

# Development tools
Makefile
docker-compose*.yml
.docker/
Dockerfile*
.dockerignore

# CI/CD files
.github/
.gitlab-ci.yml
.travis.yml
.circleci/
jenkins/
Jenkinsfile
.azure-pipelines.yml

# Backup files
*.bak
*.backup
*.old
*~

# =============================================================================
# PROJECT SPECIFIC EXCLUSIONS
# =============================================================================

# SQL scripts that might contain sensitive data
sql/sample_data_with_real_info.sql
sql/production_data.sql
sql/backup*.sql

# Project development files
.vscode/
.idea/
*.code-workspace

# Local development overrides
docker-compose.override.yml
local-config*

# Monitoring and profiling
.profile
.bashrc
.bash_history
.zsh_history

# Certificate authorities and trust stores
cacert.pem
ca-bundle.crt
ca-certificates.crt

# Package manager lock files (include only what you need)
# Uncomment if you want to exclude lock files:
# package-lock.json
# yarn.lock
# Pipfile.lock

# Example and template files that might contain secrets
*.example
*.template
*.sample
examples/
samples/
templates/

# Backup databases
*.db
*.sqlite
*.sqlite3

# =============================================================================
# ALLOW LIST - EXPLICITLY INCLUDE NECESSARY FILES
# =============================================================================
# Use ! prefix to include files that might be caught by patterns above

# Include necessary config templates (without secrets)
!config.template.json
!.env.example

# Include necessary certificates for app functionality
# (Only if they're public certificates, not private keys)
# !public-cert.pem

# =============================================================================
# NOTES FOR DEVELOPERS
# =============================================================================
# 
# 1. NEVER remove security-related patterns from this file
# 2. Always test Docker builds after modifying this file
# 3. Use multi-stage builds to minimize final image size
# 4. Prefer runtime environment variables over build-time secrets
# 5. Use Docker secrets or external secret management for production
# 6. Regular audit: `docker history <image>` to check layers
# 7. Scan images: `docker scan <image>` for vulnerabilities
#