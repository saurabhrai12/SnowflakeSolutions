# Docker Compose for local development and testing
# Note: This is for development only - production uses ECS Fargate

version: '3.8'

services:
  # Report Generation Service
  report-service:
    build:
      context: ../python-report-service
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - SERVICE_NAME=report-generator
      - ENVIRONMENT=development
      - AWS_REGION=us-east-1
      - S3_REPORTS_BUCKET=snowflake-reports-bucket-dev
      - SNOWFLAKE_ACCOUNT=${SNOWFLAKE_ACCOUNT}
      - SNOWFLAKE_USER=${SNOWFLAKE_USER}
      - SNOWFLAKE_PASSWORD=${SNOWFLAKE_PASSWORD}
      - SNOWFLAKE_DATABASE=analytics_platform
      - SNOWFLAKE_WAREHOUSE=analytics_wh
    volumes:
      - ../python-report-service:/app
    networks:
      - snowflake-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.report-service.rule=Host(`report-service.localhost`)"
      - "traefik.http.services.report-service.loadbalancer.server.port=8000"

  # Streamlit Analytics App
  streamlit-app:
    build:
      context: ../streamlit-app
      dockerfile: Dockerfile
    ports:
      - "8501:8501"
    environment:
      - SERVICE_NAME=streamlit-cortex-analyst
      - ENVIRONMENT=development
      - STREAMLIT_SERVER_PORT=8501
      - STREAMLIT_SERVER_ADDRESS=0.0.0.0
      - STREAMLIT_SERVER_HEADLESS=true
      - STREAMLIT_BROWSER_GATHER_USAGE_STATS=false
      - SNOWFLAKE_ACCOUNT=${SNOWFLAKE_ACCOUNT}
      - SNOWFLAKE_USER=${SNOWFLAKE_USER}
      - SNOWFLAKE_PASSWORD=${SNOWFLAKE_PASSWORD}
      - SNOWFLAKE_DATABASE=analytics_platform
      - SNOWFLAKE_WAREHOUSE=analytics_wh
      - SNOWFLAKE_SCHEMA=reporting
    volumes:
      - ../streamlit-app:/app
    networks:
      - snowflake-net
    depends_on:
      - report-service
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.streamlit-app.rule=Host(`analytics.localhost`)"
      - "traefik.http.services.streamlit-app.loadbalancer.server.port=8501"

  # Reverse Proxy (optional for local development)
  traefik:
    image: traefik:v3.0
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"  # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - snowflake-net
    labels:
      - "traefik.enable=true"

networks:
  snowflake-net:
    driver: bridge
    name: snowflake-analytics-network

volumes:
  app-logs:
    driver: local